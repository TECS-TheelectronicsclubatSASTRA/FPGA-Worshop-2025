module DFF(input D, input clk, input rst, output reg Q);
 always @(posedge clk or posedge rst) begin
  if(rst)
   Q=0;
  else
   Q=D;
 end
endmodule

module bday(input clk,input rst,output [3:0]o);
 wire qa,qb,qc,qd;
 wire feed1,feed2;

 assign feed1 = ~qd;
 assign feed2 = qb;

 DFF uut1(0,clk,rst,qa);
 DFF uut2(feed1,clk,rst,qb);
 DFF uut3(1,clk,rst,qc);
 DFF uut4(feed2,clk,rst,qd);
   
 assign o = {qa,qb,qc,qd};
endmodule

module tb_bday();
    reg clk;
    reg rst;
    wire [3:0]o;

    bday uut(clk, rst, o);

    always begin
        clk = 1;
        #10;
        clk = 0;
        #10;
    end

    initial begin
        rst = 1;
        #20;
        rst = 0;
        #200;
    end
endmodule
